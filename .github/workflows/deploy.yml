name: bootcamp 26 CI/CD
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: clone repo
        uses: actions/checkout@v2
      - name: docker login to github container registry
        uses: docker/login-action/@v2
        with:
         registry: ${{ secrets.REGISTRY }}
         username: ${{ secrets.REGISTRY_USERNAME }}
         password: ${{ secrets.REGISTRY_TOKEN }}

      - name: maven install
        working-directory: ./backend
        run: mvn clean install -DskipTests
      
      - name: build mysql
        working-directory: ./database
        run: docker build . -t ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bootcamp-26-db:latest
      
      - name: build backend
        working-directory: ./backend
        run: docker build . -t ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bootcamp-26-backend:latest
      
      - name: build frontend
        working-directory: ./frontend
        run: docker build . -t ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bootcamp-26-frontend:latest

      - name: docker push mysql
        run: docker push ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bootcamp-26-db:latest
      - name: docker push backend
        run: docker push ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bootcamp-26-backend:latest
      - name: docker push frontend
        run: docker push ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/bootcamp-26-frontend:latest
      
      - name: create .ssh dir
        run: mkdir  ~/.ssh
      - name: disable the strict host key checking
        run:  echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config    
      - name: copy key inside the ssh
        run:  echo -e "${{ secrets.EC2_SSH_KEY}}" > ~/.ssh/id_rsa  
      - name: setting file permissions
        run:  chmod 600 ~/.ssh/id_rsa
      
      - name: database
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.DATABASE_HOST }} 
    
      - name: pull database image
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.DATABASE_HOST }} "docker pull ghcr.io/divya-gariga/bootcamp-26-db:latest"

      - name: run database container
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.DATABASE_HOST }} "docker ps -aq | xargs docker stop | xargs docker rm && docker run -d -p 3306:3306 ghcr.io/divya-gariga/bootcamp-26-db:latest"

        
      - name: backend 
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.BACKEND_HOST }} 
    
      - name: pull backend image
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.BACKEND_HOST }} "docker rmi $(docker images -q) && docker pull ghcr.io/divya-gariga/bootcamp-26-backend:latest"

      - name: run backend container
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.BACKEND_HOST }} "docker ps -aq | xargs docker stop | xargs docker rm && docker run -d -p 8090:8090 ghcr.io/divya-gariga/bootcamp-26-backend:latest"

      
      - name: frontend
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.FRONTEND_HOST }} 
      - name: pull frontend image
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.FRONTEND_HOST }} "docker pull ghcr.io/divya-gariga/bootcamp-26-frontend:latest"
      - name: run frontend container
        run: ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.FRONTEND_HOST }} "docker run -d -p 3000:3000 ghcr.io/divya-gariga/bootcamp-26-frontend:latest"
      
     